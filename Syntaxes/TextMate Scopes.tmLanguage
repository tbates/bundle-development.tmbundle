<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array/>
	<key>name</key>
	<string>TextMate Scopes</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#scope_language</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#scope_root</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#scope_attr</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#scope_dyn</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>scope</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#scope_language</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#scope_root</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#scope_attr</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#scope_dyn</string>
				</dict>
			</array>
		</dict>
		<key>scope_attr</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\.</string>
									<key>name</key>
									<string>punctuation.separator.tm-scope</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nonconforming-scope.tm-scope</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Attr</string>
					<key>match</key>
					<string>(?x)
						\G attr
						(
							\.
							(?:file|os-version|project|rev-path|scm|untitled)
							(?:
								(?:
									(?&lt;=\.file) \. (?:unknown-type|unknown-encoding)
								  | (?&lt;!\.file)
								)
								(?:\.[^.\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]+)*
							)?
						)?
						(.*)$
					</string>
					<key>name</key>
					<string>constant.other.scope.tm-scope</string>
				</dict>
			</array>
		</dict>
		<key>scope_dyn</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\.</string>
									<key>name</key>
									<string>punctuation.separator.tm-scope</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nonconforming-scope.tm-scope</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Dyn</string>
					<key>match</key>
					<string>(?x)
						\G dyn
						(
							\.
							(?:modifier|caret|misspelled|selection)
							(?:
								(?:
									(?&lt;=\.modifier) \. (?:command|control|option|shift)
								  | (?&lt;!\.modifier)
								)
								(?:\.[^.\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]+)*
							)?
						)?
						(.*)$
					</string>
					<key>name</key>
					<string>constant.other.scope.tm-scope</string>
				</dict>
			</array>
		</dict>
		<key>scope_language</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\.</string>
									<key>name</key>
									<string>punctuation.separator.tm-scope</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nonconforming-scope.tm-scope</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Comment</string>
					<key>match</key>
					<string>(?x)
						\G comment
						(
							\.
							(?:line|block)
							(?:\.[^.\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]+)*
						)?
						(.*)$
					</string>
					<key>name</key>
					<string>constant.other.scope.tm-scope</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\.</string>
									<key>name</key>
									<string>punctuation.separator.tm-scope</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nonconforming-scope.tm-scope</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Constant</string>
					<key>match</key>
					<string>(?x)
						\G constant
						(
							\.
							(?:numeric|character|escape|language|other)
							(?:\.[^.\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]+)*
						)?
						(.*)$
					</string>
					<key>name</key>
					<string>constant.other.scope.tm-scope</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\.</string>
									<key>name</key>
									<string>punctuation.separator.tm-scope</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nonconforming-scope.tm-scope</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Entity</string>
					<key>match</key>
					<string>(?x)
						\G entity
						(
							\.
							(?:name|other)
							(?:
								(?:
									(?&lt;=\.name)  \. (?:function|type|tag|section)
								  | (?&lt;=\.other) \. (?:inherited-class|attribute-name)
								)
								(?:\.[^.\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]+)*
							)?
						)?
						(.*)$
					</string>
					<key>name</key>
					<string>constant.other.scope.tm-scope</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\.</string>
									<key>name</key>
									<string>punctuation.separator.tm-scope</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nonconforming-scope.tm-scope</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Invalid</string>
					<key>match</key>
					<string>(?x)
						\G invalid
						(
							\.
							(?:illegal|deprecated)
							(?:\.[^.\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]+)*
						)?
						(.*)$
					</string>
					<key>name</key>
					<string>constant.other.scope.tm-scope</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\.</string>
									<key>name</key>
									<string>punctuation.separator.tm-scope</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nonconforming-scope.tm-scope</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Keyword</string>
					<key>match</key>
					<string>(?x)
						\G keyword
						(
							\.
							(?:control|operator|other)
							(?:\.[^.\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]+)*
						)?
						(.*)$
					</string>
					<key>name</key>
					<string>constant.other.scope.tm-scope</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\.</string>
									<key>name</key>
									<string>punctuation.separator.tm-scope</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nonconforming-scope.tm-scope</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Markup</string>
					<key>match</key>
					<string>(?x)
						\G markup
						(
							\.
							(?:underline|bold|heading|italic|list|quote|raw|other)
							(?:\.[^.\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]+)*
						)?
						(.*)$
					</string>
					<key>name</key>
					<string>constant.other.scope.tm-scope</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\.</string>
									<key>name</key>
									<string>punctuation.separator.tm-scope</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nonconforming-scope.tm-scope</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Meta</string>
					<key>match</key>
					<string>(?x)
						\G meta
						(
							(?:\.[^.\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]+)*
						)?
						(.*)$
					</string>
					<key>name</key>
					<string>constant.other.scope.tm-scope</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\.</string>
									<key>name</key>
									<string>punctuation.separator.tm-scope</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nonconforming-scope.tm-scope</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Punctuation</string>
					<key>match</key>
					<string>(?x)
						\G punctuation
						(
							\.
							(?:definition|section|separator|terminator|whitespace)
							(?:\.[^.\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]+)*
						)?
						(.*)$
					</string>
					<key>name</key>
					<string>constant.other.scope.tm-scope</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\.</string>
									<key>name</key>
									<string>punctuation.separator.tm-scope</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nonconforming-scope.tm-scope</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Storage</string>
					<key>match</key>
					<string>(?x)
						\G storage
						(
							\.
							(?:type|modifier)
							(?:\.[^.\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]+)*
						)?
						(.*)$
					</string>
					<key>name</key>
					<string>constant.other.scope.tm-scope</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\.</string>
									<key>name</key>
									<string>punctuation.separator.tm-scope</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nonconforming-scope.tm-scope</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>String</string>
					<key>match</key>
					<string>(?x)
						\G string
						(
							\.
							(?:quoted|unquoted|interpolated|regexp|other)
							(?:
								(?:
									(?&lt;=\.quoted) \. (?:single|double|triple|other)
								  | (?&lt;!\.quoted)
								)
								(?:\.[^.\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]+)*
							)?
						)?
						(.*)$
					</string>
					<key>name</key>
					<string>constant.other.scope.tm-scope</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\.</string>
									<key>name</key>
									<string>punctuation.separator.tm-scope</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nonconforming-scope.tm-scope</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Support</string>
					<key>match</key>
					<string>(?x)
						\G support
						(
							\.
							(?:function|class|type|constant|variable|other)
							(?:\.[^.\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]+)*
						)?
						(.*)$
					</string>
					<key>name</key>
					<string>constant.other.scope.tm-scope</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\.</string>
									<key>name</key>
									<string>punctuation.separator.tm-scope</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nonconforming-scope.tm-scope</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Variable</string>
					<key>match</key>
					<string>(?x)
						\G variable
						(
							\.
							(?:parameter|language|other)
							(?:\.[^.\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]+)*
						)?
						(.*)$
					</string>
					<key>name</key>
					<string>constant.other.scope.tm-scope</string>
				</dict>
			</array>
		</dict>
		<key>scope_root</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\.</string>
									<key>name</key>
									<string>punctuation.separator.tm-scope</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nonconforming-scope.tm-scope</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Source</string>
					<key>match</key>
					<string>(?x)
						\G source
						( (?:\.[^.\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]+)* )?
						(.*)$
					</string>
					<key>name</key>
					<string>constant.other.scope.tm-scope</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>\.</string>
									<key>name</key>
									<string>punctuation.separator.tm-scope</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.nonconforming-scope.tm-scope</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Text</string>
					<key>match</key>
					<string>(?x)
						\G text
						( (?:\.[^.\s,()&amp;|\[\]:"'{}&lt;&gt;*?=^;#]+)* )?
						(.*)$
					</string>
					<key>name</key>
					<string>constant.other.scope.tm-scope</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>text.tm-scope</string>
	<key>uuid</key>
	<string>B02BCBF9-28E1-4193-A894-AB567D28924C</string>
</dict>
</plist>

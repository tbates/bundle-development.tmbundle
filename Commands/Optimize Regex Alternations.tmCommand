<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby18
#
#  list_to_regexp.rb
#  Created by Allan Odgaard on 2005-11-28.
#
#  Takes list of matches on successive lines and outputs
#  a compact regexp which will match any of the elements
#  in the list
#

def process_list (list)

  buckets = { }
  optional = false

  list.each do |str|
    if str.empty? then
      optional = true
    else
      ch = str.shift
      buckets[ch] = (buckets[ch] or []).push(str)
    end
  end

  unless buckets.empty? then
    ptrns = buckets.collect do |key, value|
      [key].pack('C') + process_list(value).to_s
    end

    if optional == true then
      "(" + ptrns.join("|") + ")?"
    elsif ptrns.length &gt; 1 then
      "(" + ptrns.join("|") + ")"
    else
      ptrns
    end
  end

end

print process_list(STDIN.collect { |line| line.chomp.unpack('C*') })
</string>
	<key>input</key>
	<string>selection</string>
	<key>name</key>
	<string>Optimize Regex Alternations</string>
	<key>output</key>
	<string>replaceSelectedText</string>
	<key>uuid</key>
	<string>442B31EC-07A9-45E4-92D1-B083EB088CDB</string>
</dict>
</plist>
